<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[机器学习入门计划]]></title>
      <url>/2017/10/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>Hello! Machine Learning@</p>
<center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=34528998&auto=1&height=66"></iframe></center>

<h2 id="为什么要入门机器学习"><a href="#为什么要入门机器学习" class="headerlink" title="为什么要入门机器学习"></a>为什么要入门机器学习</h2><p>　　很简单</p>
]]></content>
      
        
        <tags>
            
            <tag> 18岁 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[机器学习入门计划]]></title>
      <url>/2017/10/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E8%AE%A1%E5%88%92/</url>
      <content type="html"></content>
      
        
        <tags>
            
            <tag> 18岁 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[外设·键盘和显示屏的选择]]></title>
      <url>/2017/08/12/%E5%A4%96%E8%AE%BE%C2%B7%E9%94%AE%E7%9B%98%E5%92%8C%E6%98%BE%E7%A4%BA%E5%B1%8F%E7%9A%84%E9%80%89%E6%8B%A9/</url>
      <content type="html"><![CDATA[<p>　　想让自己的女朋友好看一点有错吗？！</p>
<a id="more"></a>
<center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=187980&auto=1&height=66"></iframe></center>

<h2 id="为什么买外设"><a href="#为什么买外设" class="headerlink" title="为什么买外设"></a>为什么买外设</h2><blockquote>
<p>讲道理，一个好看的键盘和多屏显示的代码界面绝对让人赏心悦目，打了代码还想打,DDL根本解决不完…于是贫穷的LBL趁着暑假就入了心水的键盘和显示屏了…（打扮一下自己的女朋友真心没错好吧！）</p>
</blockquote>
<img src="/2017/08/12/外设·键盘和显示屏的选择/女朋友.jpg" alt="程序员的女朋友" title="程序员的女朋友">
<h3 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h3><blockquote>
<p>LBL坚持的原则是颜值即正义，什么叫做好看呢…先来看波买家秀嘛<br><img src="/2017/08/12/外设·键盘和显示屏的选择/键盘1.png" alt="LBL的未来女朋友1" title="LBL的未来女朋友1"><br>粉色的，似乎比较少女哎..<br><img src="/2017/08/12/外设·键盘和显示屏的选择/键盘2.jpg" alt="LBL的未来女朋友2" title="LBL的未来女朋友2"><br>蓝色的色调似乎不错..很搭<br><img src="/2017/08/12/外设·键盘和显示屏的选择/键盘3.jpg" alt="LBL的未来女朋友2穿了衣服之后的照片" title="LBL的未来女朋友2穿了衣服之后的照片"><br>当然啦 善良可爱的LBL同学当然是选了2号女票啦，1号留着送女票嘛，嗯这个东西叫<code>洛斐DOT键盘</code></p>
</blockquote>
<hr>
<h3 id="显示屏"><a href="#显示屏" class="headerlink" title="显示屏"></a>显示屏</h3><blockquote>
<p>其实这里就是坑了..HDMI/VGA/DVI选哪种..我的是<code>Mac Book Air 15 Early</code> 所以只有雷电接口，一般来说如果直接用雷电接口的话需要去<a href="www.taobao.com">淘宝</a>随便买一个，我这里就不打广告了<br>然后有一个小tips，就是如何解决单雷电接口的问题，我使用的是双屏，加上笔记本电脑是三屏，利用雷电接口接2k的屏幕，然后再去绿联买了个独立显卡驱动，利用独立显卡驱动带起了另外一个显示屏，这个时候又会出现…<code>USB</code>接口太少，再去绿联买个一拖四呗…看视频不会感觉到卡..但是独显趋同的那个屏幕可能会打开大文件稍卡，不过雷电还是好啊。</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> 外设 </tag>
            
            <tag> 代码质量 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[怦然心动·影评]]></title>
      <url>/2017/07/14/%E6%80%A6%E7%84%B6%E5%BF%83%E5%8A%A8%C2%B7%E5%BD%B1%E8%AF%84/</url>
      <content type="html"><![CDATA[<p>　　在漫长岁月里，会不会有属于你的怦然心动出现？<br><a id="more"></a></p>
<p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=450622254&auto=1&height=66"></iframe></center><br>　　怦然心动(2010)，美国版山楂树之恋，<code>梧桐树之恋</code>，男主颜值超高，女主清纯且演技在线。导演是<a href="http://baike.baidu.com/item/%E9%81%97%E6%84%BF%E6%B8%85%E5%8D%95/9903967" target="_blank" rel="external">《遗愿清单》</a>的导演<code>Rob Reiner</code><br><img src="/2017/07/14/怦然心动·影评/玛德琳·卡罗尔.jpeg" alt="玛德琳·卡罗尔" title="玛德琳·卡罗尔"><br><img src="/2017/07/14/怦然心动·影评/玛德琳1.jpg" alt="玛德琳·卡罗尔" title="玛德琳·卡罗尔"><br><img src="/2017/07/14/怦然心动·影评/卡兰.jpg" alt="卡兰·麦克奥利菲" title="卡兰·麦克奥利菲"><br><img src="/2017/07/14/怦然心动·影评/卡兰1.jpg" alt="卡兰·麦克奥利菲" title="卡兰·麦克奥利菲"><br>　　<br>　　青春期的好感与萌动往往伴随着幼稚与伤害</p>
]]></content>
      
        
        <tags>
            
            <tag> 18岁 </tag>
            
            <tag> 影评 </tag>
            
            <tag> 爱情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[年度之歌]]></title>
      <url>/2017/07/11/%E5%B9%B4%E5%BA%A6%E4%B9%8B%E6%AD%8C/</url>
      <content type="html"><![CDATA[<p>　　<font color="red">青春</font>不做点有意义的事情简直是浪费。先听一首哥哥的歌吧~<br><a id="more"></a></p>
<p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=187837&auto=1&height=66"></iframe><br><h3>潇潇洒洒，无愧于心</h3></center></p>
<hr>
<p>　　我先给自己的18岁的前半做一个小总结。</p>
<blockquote>
<ol>
<li>先是拿了一些奖，想了想还是不发图了<blockquote>
<p>其中最有意义的是英特尔杯软件创新创业大赛，由于我才大一，在团队内做的一块就是<code>答辩</code>和<code>UI设计</code>，答辩的话口才我似乎还能拿出手，在技术方面我又不太好去做Depp learning 的内容，所以就只能做Android Studio和云平台云服务器的部署，顺便学习了一下Python的爬虫和iOS的开发，还是很荣幸的能够参加国赛的软创队伍<br>SAP竞赛，这个也是和商院大二的学姐去完成的项目，用的是拿手好戏“防艾”主题，果然还是一路杀到了北京总决赛，一路上还是了解了很多有意思的规则的，包括看到了很多公益类议题开拓了视野，虽然其中不乏老调重弹的如教育扶贫，LGBT等，但他们的切入点十分有特色，或许也是晋级的关键。<br>然后校级院级的也就不多说了，唯二值得二提的第一还是抱了ZBL大佬的大腿，最后自己只贡献了一个线段树拿到的程序设计竞赛一等奖，第二就是在数模的过程中收获的吧，美赛通宵四天三夜，国赛一直拖着拖着，虽然最后成绩都不是特别好，但我自己还是能够接受的，毕竟学到了东西嘛。</p>
</blockquote>
</li>
<li>即兴伴奏<blockquote>
<ol>
<li>首先是用卡农玩，弹的是5 7 2 3 4 / 5 7 2 4 6这种织体 hhh然后逐渐学到了各种套路比如 C B A G F E D G 然后B7之后接G啊，F之后可以接#B啊</li>
<li>之后二食堂练琴练多了认识了一堆dalao，也就慢慢交流的过程里学到了很多</li>
<li>恩，我们院的毕晚那首10分钟串烧的编曲虽然烂，但还是我的第一次编曲舞台作品的，之前都只跟着别人出去玩玩键盘hhh</li>
<li>接下来十分感谢我爸爸给我买的一个midi键盘，在宿舍玩电音的感觉真心棒，自己弹完混音自己唱哈哈哈哈哈虽然毁歌无数</li>
</ol>
</blockquote>
</li>
<li>认识了很多有意思的人，重新认识了很多有意思的人<blockquote>
<p>Hey!你知道我说你呢！！</p>
</blockquote>
</li>
</ol>
</blockquote>
<hr>
<h3 id="然后是给自己的18年做一个小总结。"><a href="#然后是给自己的18年做一个小总结。" class="headerlink" title="然后是给自己的18年做一个小总结。"></a>然后是给自己的18年做一个小总结。</h3><h4 id="我的缺点有："><a href="#我的缺点有：" class="headerlink" title="我的缺点有："></a>我的缺点有：</h4><p>浮躁，容易骄傲，虚荣，爱表现自己，博而不专，半吊子，荷尔蒙爆发时期？</p>
<h4 id="我会一点点的爱好有："><a href="#我会一点点的爱好有：" class="headerlink" title="我会一点点的爱好有："></a>我会一点点的爱好有：</h4><p>弹钢琴(菜的一笔，简单即兴伴奏，一些经典理查德名曲，一些喜欢唱的歌，一些比较简单的曲)，弹吉他(菜的一笔，简单即兴伴奏，简单和弦)，做海报(菜的一笔，大概是模仿自己喜欢的风格，并且由这些风格换色调展示)，写代码(matlab,pascal,Delphi,C++,Java,Html5,CSS3,python(这个会的比较少，仅仅会应用现有的程序包)) </p>
<h4 id="我根本入不了台面的兴趣爱好有："><a href="#我根本入不了台面的兴趣爱好有：" class="headerlink" title="我根本入不了台面的兴趣爱好有："></a>我根本入不了台面的兴趣爱好有：</h4><blockquote>
<p>唱歌(灵魂歌者，唱的不好听，不会控制气息)<br>背诗(丰富自己的内涵，还可以适当的时候吟诗提升一下逼格，偏爱苏轼，李清照的宋词，李杜的诗，可是诗词容量还是挺小的)<br>看书(武侠(金庸，古龙(高三的时候天天醉生梦死的看，啊哈现在看真的是不要命)，梁羽生，黄易)，科幻(卫斯理，海底两万里，金银岛，西方的根本没怎么看过呢，国内的也知之甚少)<br>文学类(三毛(特别喜欢三毛这个人，感觉特别洒脱，我希望达到她的人生境界)，张恨水(就一本书)，鲁迅先生(一点点，但是鲁迅先生解剖的中国人性实在是出神入化))，哲学类(尼采(自由意志，悲剧的诞生)，叔本华，&lt;正义论&gt;)，以及若干言情小说)，历史(目前尚未深入了解，只是浅薄地了解隋唐，三国)，政治(世界时事变化，天下兴亡匹夫有责呀！了解过一点点社会契约这些方面的东西)，<br>旅行(一个人穷游的话，走走停停，不仅是品味这一方山水，更是体验风土人情、嬉笑怒骂。和未来的女朋友两个人的话，以上，以及多一段记忆吧，啥时候有特价机票就肯定逮着了去玩<br>写作(虽然写的特别烂，但毕竟可以畅谈心中所想，正所谓我手写我心是也)<br>交际(我犹豫这个算不算，但我真的不知道自己在撩啥的，因为我觉得人之间的相处都应该以诚相待，以心相待)<br>了解典故(吹灭读书灯，一身都是月)<br>看电影(这个跟看书是一个感觉，抽丝剥茧，发现之前所埋伏笔的感觉仿佛高潮一般)<br>辩论(这个事我觉得特别有意思，攻防之间逻辑特别清晰，还有对价值的把控啊需要自己读很多书呢！)</p>
</blockquote>
<h4 id="·我去过的一些地方："><a href="#·我去过的一些地方：" class="headerlink" title="·我去过的一些地方："></a>·我去过的一些地方：</h4><blockquote>
<p>2008，桂林香港上海北京(基本没啥感受，太小了，三观尚未形成)</p>
<p>2010，凤凰，深圳，广州，上海，杭州(同上)</p>
<p>2013，福州，厦门(认识了一个现在还相熟的小学妹?)</p>
<p>2016，长春，丽江，大理，昆明，束河，杭州，海宁(收获良多，具体不表)</p>
</blockquote>
<h4 id="·打算去的地方："><a href="#·打算去的地方：" class="headerlink" title="·打算去的地方："></a>·打算去的地方：</h4><blockquote>
<p>2017，西安，甘肃</p>
<p>2018，黑龙江，辽宁，宁夏，青海</p>
<p>2019，云南，贵州，湖北，江苏，台湾</p>
<p>2020，四川，西藏，山西，河南，安徽，广西，海南</p>
<p>2021，伦敦？巴黎？出国看看世界</p>
</blockquote>
<h4 id="·打算看的书："><a href="#·打算看的书：" class="headerlink" title="·打算看的书："></a>·打算看的书：</h4><blockquote>
<p>第一优先位的是中国古代历史，政治文化知识</p>
<p>第二优先位的是鲁迅先生的文章，四大名著(认真读)</p>
<p>第三优先位的是欧美文学中的军事/文化类书籍</p>
</blockquote>
<p>希望自己2017的下半年能够抽出时间精读20本书吧</p>
<h4 id="·自己要改进的地方："><a href="#·自己要改进的地方：" class="headerlink" title="·自己要改进的地方："></a>·自己要改进的地方：</h4><p>性格太过于欢脱，浮躁，强势。能够沉稳下来，冷静下来。</p>
<p>涉猎太过于广泛，博而不专。能够钻研深一点，一技之长。</p>
]]></content>
      
        
        <tags>
            
            <tag> 年度计划 </tag>
            
            <tag> 18岁 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我为什么追求仪式感]]></title>
      <url>/2017/07/09/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%BD%E6%B1%82%E4%BB%AA%E5%BC%8F%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>　　逐渐发现我把自己生活里的一些小事开始<em>仪式化</em>，很开心，很幸福。<br><a id="more"></a></p>
<center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26584453&auto=1&height=66"></iframe></center>

<p>　　仪式是额外加上一些耗时耗力耗钱的非必要的动作来表达重要性的行为。或是通过这些动作来表达鬼神或是爱情这些虚拟的、不存在实体的东西，神像、玫瑰花这些都是仪式的载体，而我们通常认为的仪式是祭拜鬼神或红白二事。相比大事大动作之下的“仪式”二字，仪式感的语境则更多体现在生活中，就泡茶而言吧，当你用一大堆茶具经过一系列程序冲出茶来，一定会慢慢的品茶，之于粗鲁地从茶叶包里掏出一些茶叶、往纸杯里硬塞进去的人，泡茶的人一定细细的品尝，而不似后者待到茶微凉便一口饮尽。突然我就发现了，似乎生活里“有品位”的行为都是繁琐的，而人们把这些定位为仪式感，可我不这么认为。我觉得仪式感是不会被束缚的，是轻松简洁的，是<font color="red">“你想什么是仪式，那就是仪式，你享受那种感觉，那就是仪式感”</font>当你认为每天起床对自己说<code>新的一天要元气满满</code>这是一种仪式，那好，这句话和这个时辰已经被你赋予了独属于你的意义，就比如我：</p>
<blockquote>
<ol>
<li>昨天晚上8:13分打电话之前，告诉自己这是七月份的第11个电话，有我单身的寓意，值得珍惜。</li>
<li>与好朋友出行的时候，往往会悄悄记录这是第几次见面，这一次见面一起做了什么有趣的事情。</li>
<li>总要把某些没有特殊含义的日子赋予其含义，当然更会把各种纪念日奉若圭皋。</li>
<li>每次相逢时候的感觉都感觉跟离别了几十年以及即将离别几十年一样。 </li>
<li>两个人的晚餐因为一张纸巾而浪漫，因为这张纸巾是你用过的、我用过的，在这个时候用过的。</li>
</ol>
</blockquote>
<img src="/2017/07/09/我为什么追求仪式感/独自生存.jpg" alt="《考试过关的艺术》" title="《考试过关的艺术》">
<hr>
<p>　　之后在知乎上看到这样一则<a href="https://www.zhihu.com/question/22426910" target="_blank" rel="external">回答</a>：</p>
<blockquote>
<p>   大学时选了一门叫<code>存在主义</code>的公选课老师说了那么个理论。<br>    我到现在还记得大意是世界是无序的、混乱的、无规则的<br>    她举了个例子：<br>    “所以一个人一辈子做尽好事但最后死于非命也是正常的因为从来没有什么 善有善报 恶有恶报世界在本质上从来不跟你讲道理”<br>    从此我就觉得人生于世就像在一条漫长的暗黑河流里漂泊不知去向<br>    也不知道什么时候就会撞上暗流 被一卷而走而所谓的仪式感大概就是人<br>    甚至于人类于这河流上建造的闪闪烁烁的小灯塔吧靠这些灯塔我们才能标定我们的存在<br>    虽然说不知道什么时候来一阵风 就能把这些灯塔全部吹熄这些灯塔<br>    说穿了<br>    也是毫无意义但我们还是在创造为每一个普通的日子和动作<br>    标定它背后的精神内涵这就是人类极为卑微但又感人的地方吧</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> 仪式感 </tag>
            
            <tag> 夜思 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 独立博客环境配置以及搭建]]></title>
      <url>/2017/07/07/hexo%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p> 　　一直有搭一个完全属于自己的blog的想法，从摄影旅行呀，技术blog啊，手工作品呀，编曲乐队呀~记录一些人，记录一些事，青春里的点点滴滴，然后各种比赛拖延症一直到现在才有时间，也算是把这次的搭建整个过程给记录下来了，如果有需要的各位就可以直接享用啦！有不对的地方敬请指正！十分感谢！<br><a id="more"></a></p>
<p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="430" height="450" src="http://music.163.com/outchain/player?type=0&id=485913354&auto=1&height=430"></iframe></center></p>
<hr>
<h3 id="Build-Prepare"><a href="#Build-Prepare" class="headerlink" title="Build Prepare"></a>Build Prepare</h3><blockquote>
<p>　服务器: <a href="https://pages.github.com" target="_blank" rel="external">GitHub Pages</a><br>　域名: <a href="https://www.aliyun.com" target="_blank" rel="external">阿里云</a><br>　框架: <a href="https://nodejs.org" target="_blank" rel="external">Node.js</a><br>　选择: <a href="https://hexo.io" target="_blank" rel="external">hexo</a><br>　其他工具: <a href="http://git-scm.com" target="_blank" rel="external">Git</a></p>
</blockquote>
<h4 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h4><blockquote>
<p>官网的介绍语是Websites for you and your projects，是给个人和个人的项目提供的网站服务。即我们可以把自己在GitHub上的项目寄存到GitHub Pages上。Pages有300M免费空间，偶尔不稳定，且GitHub是一个很有用的工具，借此熟悉GitHub流程</p>
<h5 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h5><p>　　<a href="https://github.com" target="_blank" rel="external">GitHub</a>可以理解为一个注重分享的开源代码社区，每个人看到有趣的Repository都可以Fork到本地来玩，当然在这里不扯这么多，进入网站之后按照提示一步步来即可完成注册，但一定要记得邮箱，因为几乎所有的GitHub通知都会通过邮箱来发送给你。大概会有一个这样的界面，可以按着Guide来走一遍<br><img src="/2017/07/07/hexo搭建/GitHub注册页面.png" alt="注册成功" title="注册成功"></p>
<h5 id="New-repository"><a href="#New-repository" class="headerlink" title="New repository"></a>New repository</h5><p>　　登录 GitHub 之后，在页面右上角点击 + 加号按钮，点击 New repository。由于我们是新建一个个人网站项目，所有仓库的名称需要安装 GitHub 个人网站项目的规定来写。 规则就是：<code>http://YOUR-GITHUB-USERNAME.github.io</code>。比如我的 GitHub 用户名是 luoda888，那我就要填写 <code>http://luoda888.github.io</code>。选择<code>Public</code>模式，接着点进仓库即可看到仓库界面（我的是已经有内容了，刚注册时空仓库）。<br><img src="/2017/07/07/hexo搭建/GitHub仓库.png" alt="仓库" title="仓库"></p>
<hr>
</blockquote>
<h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><blockquote>
<p><a href="https://git-scm.com" target="_blank" rel="external">Git</a>是GitHub的一项非常好用的神器，以后遇见喜欢的项目都可以git clone下来在Mac,Windows上进入<a href="https://git-scm.com" target="_blank" rel="external">网站</a>直接下载安装就好，安装之后打开终端，输入<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ Git --version</div></pre></td></tr></table></figure></p>
<p>在安装完<code>Git</code>之后需要配置<code>SSH</code>，好处是让你每次Git的时候不需要输入账号密码，接下来检测是否有任意一个SSH秘钥<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ Cd ~/.ssh</div></pre></td></tr></table></figure></p>
<p>如果有的话，备份这个<code>SSH Key</code><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir key_backup</div><div class="line">$ mv id_rsa* key_backu</div></pre></td></tr></table></figure></p>
<p>生成你自己的<code>GitHub SSH Key</code><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"xxx@xxx.com”</span></div></pre></td></tr></table></figure></p>
<p>添加<code>SSh key</code>到<code>GitHub</code><br> 登录到<code>GitHub</code>页面，<code>Account Settings</code>-&gt;<code>SSH Public Keys</code>-&gt;<code>Add another key</code>将生成的key（<code>id_rsa.pub</code>文件）内容复制到输入框中存档。</p>
<p>测试连接及设置个人信息<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ssh git@github.com</div><div class="line">$ git config --global user.name <span class="string">"xxx”</span></div><div class="line">$ git config --global user.email xxx@xxx.com</div></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h4 id="域名-解析"><a href="#域名-解析" class="headerlink" title="域名/解析"></a>域名/解析</h4><p>　　选择一个自己想要的域名，最近<code>.我爱你</code>这种域名也有了…挺适合表白的<br>　　前往<a href="https://wanwang.aliyun.com" target="_blank" rel="external">万网</a>根据你自己的想法买买买<br><img src="/2017/07/07/hexo搭建/阿里云.png" alt="购买界面" title="购买界面"><br>　　之后就是解析域名，把自己的域名和IP地址绑定起来<br><img src="/2017/07/07/hexo搭建/解析.png" alt="解析界面" title="解析界面"><br>　　IP地址则是你的<code>GitHub Pages</code>对应的地址<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ Ping yourusername.github.io</div></pre></td></tr></table></figure></p>
<img src="/2017/07/07/hexo搭建/解析设置.png" alt="设置" title="设置">
<hr>
<h4 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h4><p>　　在<a href="https://nodejs.org" target="_blank" rel="external">Node.js</a>官网选择合适的版本进行下载好后，如mac上，输入以检测版本<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm -v</div><div class="line">$ node -v</div></pre></td></tr></table></figure></p>
<hr>
<h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><h5 id="Choose-Hexo"><a href="#Choose-Hexo" class="headerlink" title="Choose Hexo"></a>Choose Hexo</h5><ul>
<li>同比性能下颜值最高</li>
<li>相当多的高颜值主题可供选择</li>
<li>静态网站相比于多插件的<a href="https://cn.wordpress.org" target="_blank" rel="external">WordPress</a>可以不依托于价格高昂的服务器</li>
<li>对于一个学生狗来说，虽然不是啥大花费，但能省则省总没错</li>
<li>维护较为简单,加载网站速度超级快</li>
<li>支持归档、分类、标签、Links、关于、目录</li>
<li>高度自由的自定义主题</li>
<li>支持markdown语法</li>
</ul>
<h5 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h5><blockquote>
<p>找到自己想放置的目录<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/</div></pre></td></tr></table></figure></p>
<p>利用之前配置好的<code>npm</code>进行安装并检验是否成功<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div><div class="line">$ hexo</div></pre></td></tr></table></figure></p>
<p>因为有一些东西被Ban掉了，如果安装不了的话<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli --no-optional</div><div class="line">$ hexo</div></pre></td></tr></table></figure></p>
</blockquote>
<img src="/2017/07/07/hexo搭建/hexo安装.png" alt="hexo安装成功" title="hexo安装成功">
<blockquote>
<p>初始化博客/部署<code>Hexo</code><br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init &lt;folder&gt;  &#123;&lt;folder&gt;为你想命名的文件夹名称&#125;</div><div class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
</blockquote>
<img src="/2017/07/07/hexo搭建/部署.png" alt="部署完成" title="部署完成">
<blockquote>
<p>接下来应该可以看到<code>_config.yml</code>文件，打开至文件末端并进行如下设置<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy: </div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: http://github.com/yourname/yourname.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>这样你之后在进行<code>Hexo deploy</code>操作时即可直接上传到你的<code>GitHub仓库</code>，接着就是在本地生成静态网页了<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo generate 可简写为g</div><div class="line">$ hexo server   可简写为s</div><div class="line">$ hexo deploy   可简写为d</div></pre></td></tr></table></figure></p>
<p>如果报错则输入以下命令<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-server --save</div><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>接下来写一篇<code>Hello World</code>玩一玩<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo new Hello World</div><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>没错，新建一篇文章就是这么简单<code>Hexo new [article]</code>，并且已经可以在<code>http://localhost:4000/</code>预览了，比如我写了该文章<br> <img src="/2017/07/07/hexo搭建/初始界面.png" alt="本地界面" title="本地界面"><br>在执行完<code>Hexo deploy</code>操作后，在浏览器中输入<code>https://yourname.github.io</code>或者你自己的<a href="http://yourname.yoursite" target="_blank" rel="external">域名</a>，即可看到你自己的初始网站啦，在这之后每次部署只需要四部曲<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo clean 清除本地缓存</div><div class="line">$ hexo g 编译生成静态页面</div><div class="line">$ hexo s 在本地端口预览</div><div class="line">$ hexo d 上传到GitHub</div></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h3 id="高度定制化"><a href="#高度定制化" class="headerlink" title="高度定制化"></a>高度定制化</h3><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><blockquote>
<p><code>Hexo-asset-image</code>为我们提供了无需利用七牛云等图床，在本地即可完成图片的引用的功能<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install https://github.com/CodeFalling/hexo-asset-image --save</div></pre></td></tr></table></figure></p>
<p>接下来在markdown的语法中即可设置图片的插入<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![](github-hexo-blog/yourpic.png)  （首页不可见）</div><div class="line">&#123;% asset_img yourpic.jpg 描述%&#125;   （首页可以看到）</div></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="增加侧边栏"><a href="#增加侧边栏" class="headerlink" title="增加侧边栏"></a>增加侧边栏</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">I love you</div><div class="line">I really love you</div></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ GitHub Pages <span class="string">"YourUser.io"</span>   Node.js <span class="string">"Hexo"</span>  Git</div></pre></td></tr></table></figure>
<hr>
<p> 　　利用Github Pages + Hexo 框架来搭建自己的blog，整体耗时大概在1h左右，</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
